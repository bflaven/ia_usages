! SOURCE
+ Article
https://wp.me/p3Vuhl-3mv


--- Intro
A post that explores the author's concerns about the potential downsides of artificial intelligence (AI). They express skepticism about AI's purported benefits, highlighting fears about its impact on the environment, the labor market, and the production of relevant, useful content. The author then focuses on the challenge of evaluating the quality of AI-generated text, specifically addressing how to ensure it is "correct" and avoids "hallucinations" - instances where AI produces inaccurate or nonsensical output. They introduce the concept of "sentence embeddings" as a potential solution, explaining how it allows for comparing sentences based on meaning rather than just words. The author then presents their approach for validating the quality of AI-generated text using the "spacy-llm" package, along with other tools like "pytextrank" and "pysentence-similarity," all with the goal of ensuring the usefulness of AI-generated content.

You can read the article on my blog.
Content Quality: How Sentence Embeddings Can Save AI-Generated Content and some other concerns on AI: Environmental Impact, Job Loss
- https://wp.me/p3Vuhl-3mv



+ Audio version
This post is also an experiment to test NotebookLM.
- https://on.soundcloud.com/61ufT6BNt4WzhvwX7

+ User Story
# User Story
As a journalist, I want to evaluate how closely a proposed set of content (title, abstract, and 10 keywords) aligns syntactically with 10 alternative content sets generated by a Mistral-type LLM. Using sentence similarity, I need the system to compare my original content set with each of the 10 generated sets, rank these generated sets from most relevant to least relevant, and display the results. This comparison should support multiple languages, including English, Spanish, Russian, Portuguese, and Vietnamese, among others.

# Context
Sentence Similarity refers to measuring how similar two texts are by converting them into vector embeddings that capture their semantic meaning, then calculating their proximity to one another. This is especially useful in ranking, clustering, and information retrieval tasks.

+ packages

- spacy-llm
Source: https://github.com/explosion/spacy-llm
- pytextrank
Source: https://pypi.org/project/pytextrank/

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_spacy_llm

+ Video

--- create the env with anaconda
"""
[env]
# Conda Environment
conda create --name ia_spacy_llm python=3.9.13
conda info --envs
source activate ia_spacy_llm
conda deactivate


# BURN AFTER READING
source activate ia_spacy_llm

# if needed to remove
conda env remove -n [NAME_OF_THE_CONDA_ENVIRONMENT]
conda env remove -n ia_spacy_llm

# BURN AFTER READING
conda env remove -n ia_spacy_llm


# other libraries
python -m pip install spacy 
python -m pip install spacy-llm 
python -m pip install scikit-learn
python -m pip install python-dotenv
python -m pip install langchain-openai

# spacy
python -m spacy download en_core_web_sm
python -m spacy download en_core_web_md
python -m spacy validate

# other
python -m pip install -U sentence-transformers

# update conda 
conda update -n base -c defaults conda

# to export requirements
pip freeze > requirements.txt


"""
--- Step #1: Generate the output from the LLM: check 024_ia_ollama_streamlit.py
--- Step #2: Append some other variables to the output from the LLM: check 027a_ia_ollama_streamlit_append_files.py. This step should be probably merged with the Step #1, you lazy slob!
--- Step #3: Measure the semantic similarity betwwen the ouput IA generated and the human proposal. Comparison id made with "all-MiniLM-L6-v2". check 029_ia_sentence_transformers_import.py



--- ia_spacy_llm:
- ia_spacy_llm_1.mov

# Conda Environment
conda create --name ia_spacy_llm python=3.9.13
conda info --envs
source activate ia_spacy_llm
conda deactivate

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_spacy_llm/

# LAUNCH THE ENV
source activate ia_spacy_llm

# LAUNCH THE FILE Step #1
streamlit run 024_ia_ollama_streamlit.py

# LAUNCH THE FILE Step #2
streamlit run 027a_ia_ollama_streamlit_append_files.py


--- ia_spacy_llm:
- ia_spacy_llm_2.mov

! CONSOLE_SCREEN (commands)

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_spacy_llm

# LAUNCH THE ENV
source activate ia_spacy_llm

# launch the file
python 029_ia_sentence_transformers_import.py



