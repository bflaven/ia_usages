#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
[env]
# Conda Environment
conda create --name geo_llms_txt_poc python=3.9.13
conda info --envs
source activate geo_llms_txt_poc
conda deactivate

# if needed to remove
conda env remove -n [NAME_OF_THE_CONDA_ENVIRONMENT]
conda env remove -n geo_llms_txt_poc


# update conda 
conda update -n base -c defaults conda

# to export requirements
pip freeze > requirements.txt

# to install
pip install -r requirements.txt

pip install beautifulsoup4
pip install requests

python -m pip install beautifulsoup4
python -m pip install requests

# [path]
cd /Users/brunoflaven/Documents/01_work/blog_articles/_ia_using_n8n_io/generative_engine_optimization_llms_txt

# LAUNCH the file
python 001_generative_engine_optimization_llms_txt.py

"""

import requests

llms_txt_template = """
# Bruno Flaven's website

> Professional blog of Bruno Flaven, currently working as AI Coordinator with over 20 years' experience in mobile and desktop Internet applications. Find more at [flaven.fr](https://flaven.fr) or his [LinkedIn](https://www.linkedin.com/in/brunoflaven). Current projects involve AI, prompt management, and media tech at France Media Monde (FMM).

Dedicated to posts, guides, and code samples for AI, mobile apps (iOS/Android), and project management in a blend of French and English. Explanations are mainly in English and often related to Artificial Intelligence.

## Homepage

- [AI Implementation Challenges: Strategic Considerations for Prompt Management, Data Integration, and Organizational Knowledge Sharing](https://flaven.fr/): Introductory article on setbacks and strategies for successful AI rollout in organizations.

## Posts

- All posts: mixture of tutorials, code samples, and professional reflections on AI, web development, and project management.

## Pages

- Main information: Personal projects, experiences, work methodology, and case studies.

## Code

- Shared scripts and code snippets are typically extracted from actual use cases and practical tutorials published in the blog.

## Optional

- [LinkedIn profile](https://www.linkedin.com/in/brunoflaven)
- [Contact page](https://flaven.fr/contact) (if available on the blog)

[comment]: # (Generated by Bruno for flaven.fr)

"""

def create_llms_txt(site_url, output_path="llms_model_flaven_fr.txt"):
    # Attempt to fetch the homepage (expand logic as needed)
    resp = requests.get(site_url)
    if resp.status_code != 200:
        print(f"Failed to retrieve {site_url}")
    else:
        # (You can optionally extract dynamic titles or main sections here if needed.)
        pass

    with open(output_path, "w", encoding="utf-8") as f:
        f.write(llms_txt_template.strip())
    print(f"llms.txt successfully created at: {output_path}")

if __name__ == "__main__":
    create_llms_txt("https://flaven.fr/")

