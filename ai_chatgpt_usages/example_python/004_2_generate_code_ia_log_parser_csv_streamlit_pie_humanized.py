#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
003_3_generate_code_ia_log_parser_csv_streamlit_humanized_2.py
source Python for GPT query  
QUERY :: Generate the code to select specific columns in a panda dataframe (df) in order to show it in a pie chart inside a Streamlit application 

CAUTION :: the code generated by Chat GPT

"""

"""
[env]
# Conda Environment
conda create --name unstructured_data_python_parsing python=3.9.7
conda info --envs
source activate unstructured_data_python_parsing
conda deactivate
# if needed to remove
conda env remove -n [NAME_OF_THE_CONDA_ENVIRONMENT]

# update conda 
conda update -n base -c defaults conda


[path]
cd /Users/brunoflaven/Documents/03_git/BlogArticlesExamples/ai_chatgpt_usages/example_python



[file]
streamlit run generate_code_ia_log_parser_csv_streamlit_pie_humanized.py

# other module
pip install requests
pip install pandas
pip install streamlit
pip install numpy
pip install datetime
pip install watchdog

[source]
https://github.com/bflaven/BlogArticlesExamples/tree/master/unstructured_data_python_parsing


"""
import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

# deprecated
# @st.cache
@st.cache_data
def load_data(file_path):
    df = pd.read_csv(file_path)
    return df

def main():
    # file_path = "data.csv"
    file_path = "generate_code_ia_log_parser_panda_humanized_sample_error_data_humanized_2.csv"

    
    df = load_data(file_path)

    st.title("Data Visualization")

    # Show the data as a table
    st.dataframe(df)

    # Plot a pie chart of the data
    labels = df.columns
    # values = df.iloc[0].tolist()
    # st.code(values)
    
    plt.pie(values, labels=labels)
    st.pyplot()

    # Show the average of the data
    # st.write("Average:", df.mean().to_string(index=False))

if __name__ == "__main__":
    main()
