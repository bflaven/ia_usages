! SOURCE
+ Article
https://flaven.fr/2025/01/breadcrumbs-of-innovation-a-snapshot-of-ai-explorations/

--- Intro
Todo

You can read the article on my blog.
Breadcrumbs of Innovation: A Snapshot of AI Explorations
- https://wp.me/p3Vuhl-3mP



--- Audio version
This post is also an experiment to test NotebookLM. So, here is this regular blog post "Breadcrumbs of Innovation: A Snapshot of AI Explorations" converted into a podcast using NotebookLM.

It has been converted in 2 files.

The Big Dive part 1 : exploring reflections on the impact of artificial intelligence (AI)
- https://on.soundcloud.com/op6bLu93JctictkFA

The Big Dive part 2 : The 2025 US presidential election through the lens of “We Have Never Been Woke,” a book critiquing a new “woke” elite.
- https://on.soundcloud.com/QXkbJYtfSLuPyFs46

! VIDEOS

--- create the env with anaconda

"""
[env]
# Conda Environment
conda create --name ia_using_faiss python=3.9.13
conda info --envs
source activate ia_using_faiss
conda deactivate


# BURN AFTER READING
source activate ia_using_faiss

# if needed to remove
conda env remove -n [NAME_OF_THE_CONDA_ENVIRONMENT]
conda env remove -n ia_using_faiss

# BURN AFTER READING
conda env remove -n ia_using_faiss


# install packages with conda
conda install -c conda-forge sentence-transformers
conda install -c pytorch faiss-cpu

# install packages with pip
python -m pip install sentence-transformers
python -m pip install pytorch faiss-cpu
python -m pip install numpy



# update conda 
conda update -n base -c defaults conda

# to export requirements
pip freeze > requirements.txt

# [path]
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_cms

# launch the file
python 005_ia_cms.py


"""


+ 1. ia_cms: Using semantic similarity with a CMS

--- ia_cms_semantic_similarity:
- ia_cms_semantic_similarity.mov

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_cms

! CONSOLE_SCREEN (commands)

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_cms


# LAUNCH THE ENV
conda info --envs
source activate ia_using_faiss


# launch the file
python 005_ia_cms.py


+ 2. ia_faiss: Using faiss


+ 2.1 ia_faiss_generate_caption:
--- ia_faiss_generate_caption.mov

- DESC: It generates caption in english for images that have been vectorised

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_faiss

! CONSOLE_SCREEN (commands)

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_faiss/


# launch the file
python 013_ia_blip_generate_caption_generate_english.py

# LAUNCH THE ENV
conda info --envs
source activate ia_using_faiss


# launch the file
python 013_ia_blip_generate_caption_generate_english.py

+ 2.2 ia_faiss_natural_language_query:
--- ia_faiss_natural_language_query.mov

- DESC: It enables the user to sort images based on their relevance to a user’s multilingual text input.

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_faiss

! CONSOLE_SCREEN (commands)

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_faiss/

# launch the file in streamlit
streamlit run 013_ia_faiss_clip_streamlit.py

+ 2.3 ia_faiss_caption_face_recognition_images:
--- ia_faiss_caption_face_recognition_images.mov

- DESC: A separate method using face_recognition and transformers creates accurate descriptions for images. These descriptions can improve image search or provide useful alternative text (alt messages) for accessibility. For instance, it might describe an image as "A smiling person at the beach during sunset," which is helpful for users and search engines. NOTE: It enables the face_recognition from a list of pictures set in a directory named known_faces where a bunch of presidents

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_faiss


! CONSOLE_SCREEN (commands)

# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_faiss/


# launch the file
python 015_ia_blip_generate_caption_face_recognition.py

+ 2.4 ia_faiss_caption_face_recognition_text:
--- ia_faiss_caption_face_recognition_text.mov

- DESC: It enables the face_recognition from a list of words where a bunch of presidents has been set.

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_faiss

! CONSOLE_SCREEN (commands)


# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_faiss/

# launch the file
python 017_ia_blip_generate_caption_face_recognition.py


+ 3. ia_video_editing: Attempt using streamlit and spacy to make video editing
--- ia_video_editing.mov

- DESC: This app helps analyze text from a transcription file (exported as JSON from Whisper). It uses a tool called SpaCy to find important information like "Detected Entities" (e.g., names, places), "Key Phrases" (important topics), and "Text Segments" (specific parts of the text). For each of these, it shows the time when they start (cue point IN) and end (cue point OUT) in the audio or video.

CODE: https://github.com/bflaven/ia_usages/tree/main/ia_video_editing_faiss_compare_keywords/ia_faiss

! CONSOLE_SCREEN (commands)


# GO TO DIR
cd /Users/brunoflaven/Documents/03_git/ia_usages/ia_video_editing_faiss_compare_keywords/ia_video_editing

# launch the file
streamlit run 011_ia_video_editing_spacy_entitities_cuepoints_streamlit.py


